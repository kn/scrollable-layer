// Generated by CoffeeScript 1.3.3

(function($) {
  var getNewLayerTop, getNumberData, initializeScrollableLayers;
  $(function() {
    var layers;
    layers = initializeScrollableLayers();
    return $(document).scroll(function(e) {
      var layer, scrollTop, _i, _len, _results;
      scrollTop = parseInt($(document).scrollTop());
      _results = [];
      for (_i = 0, _len = layers.length; _i < _len; _i++) {
        layer = layers[_i];
        _results.push(layer.elem.css('top', getNewLayerTop(layer, scrollTop)));
      }
      return _results;
    });
  });
  initializeScrollableLayers = function() {
    var $layer, $layers, data, layer, layers, _i, _len;
    layers = [];
    $layers = $(".scrollable-layer");
    if ($layers != null) {
      for (_i = 0, _len = $layers.length; _i < _len; _i++) {
        layer = $layers[_i];
        data = {};
        $layer = $(layer);
        data.elem = $layer;
        data.init = getNumberData($layer, 'layer-top') || 0;
        data.start = getNumberData($layer, 'scroll-start') || 0;
        data.end = getNumberData($layer, 'scroll-end') || $(document).height();
        data.min = data.init - (data.end - data.start);
        layers.push(data);
        $layer.css('position', 'fixed');
        $layer.css('top', data.init);
      }
    }
    return layers;
  };
  getNewLayerTop = function(layer, scrollTop) {
    var top;
    top = layer.init - (scrollTop - layer.start);
    if (top < layer.min) {
      top = layer.min;
    }
    if (top > layer.init) {
      top = layer.init;
    }
    return top;
  };
  return getNumberData = function($layer, type) {
    var numStr;
    numStr = $layer.data(type);
    if (numStr != null) {
      return parseInt(numStr);
    } else {
      return null;
    }
  };
})(window.jQuery);
